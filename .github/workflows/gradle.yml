name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  
jobs:
  build_docker_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build with Gradle Wrapper
      run: chmod +x ./gradlew &&  ./gradlew build
    - name: Docker login to DockerHub  with token 
      run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build . -t ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-azure-storage-appcontainer-demo

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-azure-storage-appcontainer-demo
  
  deploy_to_azure: ## deploy appcontainer to azure 
    permissions:
      contents: read
      id-token: write      
    runs-on: ubuntu-latest    
    steps:
      - name: Login to azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Container Instances
        uses: azure/container-apps-deploy-action@v1
        with:
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          name: ${{ secrets.AZURE_CONTAINER_NAME }}
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-azure-storage-appcontainer-demo
          ports: 8080
          cpu: 1
          memory: 1.5
          restart-policy: Always
          environment-variables: 'DATABASE_URL=${{ secrets.DATABASE_URL }};AZURE_STORAGE_ACCOUNT_NAME=${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }};AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }};AZURE_STORAGE_ACCOUNT_KEY=${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}'


    
    
